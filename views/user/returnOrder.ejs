<%- include("../layouts/profileheader.ejs") %>

<div class="col-lg-8">
  <div class="card mt-4">
    <div class="card-header bg-light py-4 ">
      <h4 class="mb-0"> Return Products</h4>
    </div>
    <div class="card-body ">
        <form id="returnOrder">
        <div class="card">
            <div class="card-header">
                Order details<br><small>Your order items yet to be returned</small>
            </div>
            <div class="card-body">
                <table class="table text-center table-primary">
                    <colgroup>
                        <col width="100" />
                        <col />
                        <col width="1" />
                        <col />
                        <col width="100" />
                        <col />
                        <col width="1" />
                        <col />

                    </colgroup>
                    <thead class="bg-primary text-dark">
                        <tr>
                            <th class="first">Image</th>
                            <th class="text-center font-weight-500" >Product</th>
                            <th class="text-center font-weight-500" >Size</th>
                            <th class="text-center  font-weight-500" >Price</th>
                            <th class="text-center  font-weight-500">Qty</th>
                            <th class="text-start  font-weight-500">Total</th>
                        </tr>
                    </thead>
                    <tbody class="table-bordered">
                        <% for( let i=0; i < return1.items.length; i++ ) { %>
        <tr class="bg-light">
          <td class="product-thumbnail text-start">
            <a href="#"><img src="<%=return1.items[i].productId.productImages[0]%>" alt="..." class="img-fluid" width="60vw"></a>
          </td>
          <td class="text-center" style="font-size: 1.2vw;">
            <a href="/product?id=<%=return1.items[i].productId._id%>" class="text-dark ">
              <%=return1.items[i].productId.productName%>
            </a>
          </td>
          <td class="text-center text-dark" style="font-size: 1vw;">
            <%=return1.items[i].size%>
          </td>
          <td class="text-center" style="font-size: 1vw;"><span>&#x20B9;</span>
            <%=return1.items[i].productId.price%>
          </td>
          <td class="product-quantity"  style="font-size: 1vw;">
            <button
                onclick="changeQuantity('<%=return1.items[i].productId._id%>','<%=return1.order_id%>','<%=return1.items[i].quantity%>','<%=return1.items[i].productId.price%>','<%=return1.items[i].productId.productName%>',-1)"
                class="btn btn-primary btn-sm minusBtn p-0 px-1"
                id="minusBtn<%=return1.items[i].productId._id%>" disabled 
                        > -
            </button>
            <input type="text" class="text-center"
                id="<%=return1.items[i].productId._id%>" name="returned<%=return1.items[i].productId._id%><%=return1.items[i].size%>"
                value="0" style="width:20px; height:20px; font-size: 1vw;" />
            <button
                onclick="changeQuantity('<%=return1.items[i].productId._id%>','<%=return1.order_id%>','<%=return1.items[i].quantity%>','<%=return1.items[i].productId.price%>','<%=return1.items[i].productId.productName%>',1)"
                class="btn btn-primary plusBtn btn-sm p-0 px-1"  id="plusBtn<%=return1.items[i].productId._id%>" >
                
                +
            </button>
        </td>
          <td id="totalPrice<%=return1.items[i].productId._id%>" class="product-subtotal text-center" style="font-size: 1vw;">
            <span>&#x20B9;</span>
            <%=return1.items[i].totalPrice%>
          </td>
        </tr>
        <% } %>
        </tbody>
        </table>
      </div>
        </div>
        <div class="card" id="refundHead" style="display: none;">
            <h5 class="mt-4 mx-3"  >Total Amount to be Refunded: &#x20B9;<span id="refundAmt"></span></h5>
            <input type="hidden" name="refund" id="refundAmtTotal" value="0">
            <hr>

            <h6 class="mx-3">Choose your mode of refund</h6>
            <div class="form-check mx-3">
                <input type="radio" class="form-check-input" name="refundMode" value="wallet" id="refundWallet" required>
                <label class="form-check-label" for="refundWallet">Refund to Wallet</label>
              </div>
              <%if(return1.payment_method=="online"){%>
              <div class="form-check mx-3 mb-3">
                <input type="radio" class="form-check-input" name="refundMode" value="online" id="refundOnline" required>
                <label class="form-check-label" for="refundOnline">Refund via Razorpay</label>
              </div>
              <div class="d-flex justify-content-end align-items-center mx-3">
              <button type="submit" id="returnNow" class="btn btn-primary mb-3">Return Product(s)</button>
            </div>
              <%}%>
        </div>
    </form>
  </div>
</div>
</div>
</div>
</section>

<!-- axios cdn -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.3/axios.min.js"></script>

<!-- sweet alert cdn -->
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  const Toast = Swal.mixin({
    toast: true,
    position: "top-end",
    showConfirmButton: false,
    timer: 1000,
    timerProgressBar: true,
    didOpen: (toast) => {
      toast.addEventListener("mouseenter", Swal.stopTimer);
      toast.addEventListener("mouseleave", Swal.resumeTimer);
    },
  });
  async function changeQuantity(productId, orderId, quantity,price, name, cnt) {
    const quantityInput = document.getElementById(productId);
    const count = parseInt(cnt);
    let qty = parseInt(quantityInput.value);
    qty += count;

    // Ensure the quantity is not less than 0
    qty = Math.max(0, qty);

    // Get the maximum allowed quantity (you may replace this with your actual maximum value)
    const maxQuantity = quantity; // For example, assuming the maximum allowed quantity is 10

    // Ensure the quantity does not exceed the maximum allowed value
    qty = Math.min(maxQuantity, qty);

    // Update the quantity input field with the new quantity
    quantityInput.value = qty;

    // Handle button visibility based on quantity
    const minusBtn = document.getElementById(`minusBtn${productId}`);
    const plusBtn = document.getElementById(`plusBtn${productId}`);

    if (qty == parseInt(quantity)) {
    plusBtn.disabled = true;
} else {
    plusBtn.disabled = false;
    
}

    if (qty <= 0) {
      minusBtn.disabled = true;
    } else {
      minusBtn.disabled = false;
    }

    let total = parseInt(document.getElementById("refundAmtTotal").value)
    total+=parseInt(price)*qty
    document.getElementById("refundAmtTotal").value=`${total}`
    if(total>0){
        document.getElementById("refundHead").style.display='block'
        document.getElementById("refundAmt").innerHTML=`${total}.00`
    }
    
  }

let returnForm=document.getElementById('returnOrder')

returnForm.addEventListener('submit',async(e)=>{
    e.preventDefault();
    Swal.fire({
          icon: "warning",
          title: "Are you sure?",
          text: "Do you want to proceed?",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "remove",
        }).then(async (result) => {
          if (result.isConfirmed) {
    let serializedData = $("#returnOrder").serialize();
            const urlSearchParams = new URLSearchParams(serializedData);
            const info = Object.fromEntries(urlSearchParams.entries());
            let orderId='<%=return1.order_id%>'
            
            let result = await axios({
              url: `/user/orders/${orderId}/return/refund`,
              method: 'POST',
              data: {
                info,
              }
            });
            if (result.data.status) {
              Toast.fire({
                icon: "success",
                title: "Returned",
                text: "Product returned and refunded"
            }).then(()=>{
                let orderId2='<%=return1.order_id%>'
                window.location.href= `/user/orders/${orderId2}`
            })
        }else{
            Toast.fire({
                icon: "error",
                title: "Error",
                text: "Not successful"
            })
        }
}
})
})
</script>
<%- include("../layouts/userfooter.ejs") %>