<div class="container-fluid text-dark mt-5 pt-5" style="background-color: #e9d4d4; overflow: hidden;">
  <div class="row px-xl-5 pt-5">
    <div class="col-lg-4 col-md-12 mb-5 pr-3 pr-xl-5">
      <a href="" class="text-decoration-none">
        <h1 class="mb-4 display-5 font-weight">Styles<span class="text-primary px-2 mr-1">4U</span></h1>
      </a>
      <p class="mb-2" style="color:rgb(167, 55, 55)"><i class="fa fa-map-marker-alt text-primary mr-3 "></i>Regional Office address</p>
      <p>Styles4U Private Limited,<br>
        Stadium Complex,<br>
        Thalikaavu Road,<br>
        Kannur, 670301, Kerala, India<br>
        Telephone: 044-45614700</p>
    </div>
    <div class="col-lg-8 col-md-12">
      <div class="row">
        <div class="col-md-4 mb-5">
          <h5 class="font-weight-bold text-dark mb-4">Quick Links</h5>
          <div class="d-flex flex-column justify-content-start">
            <a class="text-dark mb-2" href="/"><i class="fa fa-angle-right mr-2"></i>Home</a>
            <a class="text-dark mb-2" href="/shop"><i class="fa fa-angle-right mr-2"></i>Shop</a>
            <a class="text-dark mb-2" href="/cart"><i class="fa fa-angle-right mr-2"></i>Cart</a>
            <a class="text-dark mb-2" href="/wishlist"><i class="fa fa-angle-right mr-2"></i>Wishlist</a>
            <a class="text-dark mb-2" href="/user"><i class="fa fa-angle-right mr-2"></i>Profile</a>
          </div>
        </div>
        <div class="col-md-4 mb-5">
          <h5 class="font-weight-bold text-dark mb-4">Miscellaneous links</h5>
          <div class="d-flex flex-column justify-content-start">
            <a class="text-dark mb-2" href="/policy/return"><i class="fa fa-angle-right mr-2"></i>Return Policy</a>
            <a class="text-dark mb-2" href="/policy/cancellation"><i class="fa fa-angle-right mr-2"></i>Cancellation Policy</a>
            <a class="text-dark mb-2" href="/user/orders"><i class="fa fa-angle-right mr-2"></i>Order List</a>
            <a class="text-dark mb-2" href="/user/address"><i class="fa fa-angle-right mr-2"></i>Your Address</a>
            <a class="text-dark mb-2" href="/user/wallet"><i class="fa fa-angle-right mr-2"></i>Wallet</a>

          </div>
        </div>
        <div class="col-md-4 mb-5 pl-0 ml-0">
          <img src="/images/girls-and-clothing-fashion-shop-seeklogo.svg" width="110%">
        </div>
      </div>
    </div>
  </div>
  <div class="row border-top border-light mx-xl-5 py-4">
    <div class="col-md-6 px-xl-0">
      <p class="mb-md-0 text-center text-md-left text-dark">
        Â© <a class="text-dark font-weight-semi-bold" href="#">Styles4U</a>. All Rights Reserved. Designed
        by Uthara Subhod
      </p>
    </div>
  </div>
</div>
</div>

<a href="#" class="btn btn-primary back-to-top"><i class="fa fa-angle-double-up"></i></a>

<!-- axios cdn -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.3/axios.min.js"></script>

<!-- sweet alert cdn -->
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/elevatezoom/3.0.8/jquery.elevatezoom.min.js"></script>

<script>
  $(document).ready(function() {
    $('.zoom').elevateZoom({
      zoomWindowWidth: 250,
      zoomWindowHeight: 200
    });
  });
</script>

<script>
    async function addtocartwish(id){
        const inputOptions = new Promise((resolve) => {
  setTimeout(() => {
    resolve({
      'XS': 'XS',
      'S' : 'S',
      'M': 'M',
      'L': 'L',
      'XL': 'XL',
    })
  }, 1000)
})

const { value: selectedSize } = await Swal.fire({
  title: 'Select what you performed.',
  input: 'radio',
  inputOptions: inputOptions,
  inputValidator: (value) => {
    if (!value) {
      return 'You need to choose something!'
    }
  }
})
if(selectedSize){
    let result = await axios({
        method: "post",
        url: "/cart/add",
        data: {
          id,
          size: selectedSize,
        },
      });

      if (result.data.response == "productExist") {
        await Swal.fire({
          icon: "error",
          title: "Product already exist",
          showConfirmButton: false,
          timer: 1000,
        });
      } else if (result.data.response == "outofstock") {
        await Swal.fire({
          icon: "error",
          title: "Oops...",
          text: "Product Out of Stock",
          showConfirmButton: false,
          timer: 1000,
        });
      } else {
        if (result.data.response == true) {
          await Swal.fire({
            icon: "success",
            title: "done",
            text: "Product added to cart",
            showConfirmButton: false,
            timer: 1500,
          });
          // location.reload()
          let cartCountElement = document.getElementById('cartCount');
            let currentCartCount = parseInt(cartCountElement.innerHTML);
            cartCountElement.innerHTML = (currentCartCount + 1).toString();
        } else {
          if (result.data.status == true) {
            await Toast.fire({
              icon: "success",
              title: "New product added successfully",
            });
            // location.reload()
            let cartCountElement = document.getElementById('cartCount');
            let currentCartCount = parseInt(cartCountElement.innerHTML);
            cartCountElement.innerHTML = (currentCartCount + 1).toString();
          } else {
            const url = window.location.href.replace("http://localhost:8000", "");
            await Swal.fire({
              icon: "error",
              title: "Oops...",
              showConfirmButton: false,
              timer: 1000,
              text: "You have to login first",
            });
            location.href = `/login?url=${url}`;
          }
        }
      }
}
    }

  async function addtocartShop(id) {
    try {
      const selectedSize = document.querySelector('input[name="size"]:checked').value;
      let result = await axios({
        method: "post",
        url: "/cart/add",
        data: {
          id,
          size: selectedSize,
        },
      });

      if (result.data.response == "productExist") {
        await Swal.fire({
          icon: "error",
          title: "Product already exist",
          showConfirmButton: false,
          timer: 1000,
        });
      } else if (result.data.response == "outofstock") {
        await Swal.fire({
          icon: "error",
          title: "Oops...",
          text: "Product Out of Stock",
          showConfirmButton: false,
          timer: 1000,
        });
      } else {
        if (result.data.response == true) {
          await Swal.fire({
            icon: "success",
            title: "done",
            text: "Product added to cart",
            showConfirmButton: false,
            timer: 1500,
          });
          // location.reload()
          let cartCountElement = document.getElementById('cartCount');
            let currentCartCount = parseInt(cartCountElement.innerHTML);
            cartCountElement.innerHTML = (currentCartCount + 1).toString();
        } else {
          if (result.data.status == true) {
            await Toast.fire({
              icon: "success",
              title: "New product added successfully",
            });
            // location.reload()
            let cartCountElement = document.getElementById('cartCount');
            let currentCartCount = parseInt(cartCountElement.innerHTML);
            cartCountElement.innerHTML = (currentCartCount + 1).toString();
          } else {
            const url = window.location.href.replace("http://localhost:8000", "");
            await Swal.fire({
              icon: "error",
              title: "Oops...",
              showConfirmButton: false,
              timer: 1000,
              text: "You have to login first",
            });
            location.href = `/login?url=${url}`;
          }
        }
      }
    } catch (error) {
      console.log("eroor");
    }
  }

  async function addtowishlist(id) {
    try {
      let result = await axios({
        method: "post",
        url: "/wishlist/add",
        data: {
          id,
        },
      });
      if (result.data.response == "productExist") {
        await Swal.fire({
          icon: "error",
          title: "Oops...",
          text: "Product already exist in wishlist",
          showConfirmButton: false,
          timer: 1000,
        });
      } else {
        if (result.data.response == true) {
          await Swal.fire({
            icon: "success",
            title: "done",
            text: "Product added to wishlist",
            showConfirmButton: false,
            timer: 1500,
          });
          let wishCountElement = document.getElementById('wishCount');
            let currentwishCount = parseInt(wishCountElement.innerHTML);
            wishCountElement.innerHTML = (currentwishCount + 1).toString();
        } else {
          if (result.data.status == true) {
            await Swal.fire({
              icon: "success",
              title: "done",
              text: "New product added",
              showConfirmButton: false,
              timer: 1000,
            });
            let wishCountElement = document.getElementById('wishCount');
            let currentwishCount = parseInt(wishCountElement.innerHTML);
            wishCountElement.innerHTML = (currentwishCount + 1).toString();
          } else {
            await Swal.fire({
              icon: "error",
              title: "Oops...",
              showConfirmButton: false,
              timer: 1000,
              text: "You have to login first",
            });
            location.href = "/login";
          }
        }
      }
    } catch (error) {
      console.log("eroor");
    }
  }

  async function cod(id) {
    try {
      let result = await axios({
        method: "post",
        url: "/user/order/cod",
        data: {
          id,
        },
      });
      if (result.data.status) {
        await Swal.fire({
          icon: "success",
          title: "Payment Done",
          text: "Hope to see you again!",
          showConfirmButton: false,
          timer: 1000,
        });
        location.reload();
      } else {
        await Swal.fire({
          icon: "error",
          title: "Payment failed",
          text: "Please try again :(",
          showConfirmButton: false,
          timer: 1000,
        });
        location.reload();
      }
    } catch (err) {}
  }
</script>

<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
<script src="lib/easing/easing.min.js"></script>
<script src="lib/owlcarousel/owl.carousel.min.js"></script>


<!-- Contact Javascript File -->
<script src="mail/jqBootstrapValidation.min.js"></script>
<script src="mail/contact.js"></script>

<!-- Template Javascript -->
<script src="js/main.js"></script>
<script src="js/formvalidation.js"></script>
</body>

</html>